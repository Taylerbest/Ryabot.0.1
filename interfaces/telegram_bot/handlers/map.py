"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /map - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ WebApp
"""
import logging
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

logger = logging.getLogger(__name__)

router = Router()

ISLAND_MAP_URL = "https://taylerbest.github.io/ryabot/"

@router.message(Command("map"))
async def cmd_map(message: Message):
    """–ë—ã—Å—Ç—Ä–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç—ã - —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º inline –∫–Ω–æ–ø–∫—É
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(
                text="üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É –æ—Å—Ç—Ä–æ–≤–∞",
                web_app=WebAppInfo(url=ISLAND_MAP_URL)
            )]
        ])

        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            text="üó∫Ô∏è <b>–ö–∞—Ä—Ç–∞ –æ—Å—Ç—Ä–æ–≤–∞</b>",
            reply_markup=keyboard,
            parse_mode="HTML"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞")
