# interfaces/telegram_bot/handlers/friends.py
"""
Handler –º–µ–Ω—é –¥—Ä—É–∑–µ–π
"""

import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import LinkPreviewOptions
from config.texts import *
from config.settings import settings


router = Router()
logger = logging.getLogger(__name__)


def get_friends_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥—Ä—É–∑–µ–π - –¢–û–ß–ù–´–ï –ù–ê–ó–í–ê–ù–ò–Ø"""
    keyboard = [
        [InlineKeyboardButton(text=BTN_FRIENDS_MY, callback_data="friends_my")],
        [InlineKeyboardButton(text=BTN_FRIENDS_STORAGE, callback_data="friends_storage")],
        [InlineKeyboardButton(text=BTN_FRIENDS_SHOP, callback_data="friends_shop")]
    ]

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


from utils.base62_helper import generate_referral_link


async def get_friends_data(user_id: int) -> dict:
    """–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –¥—Ä—É–∑—å—è—Ö –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö"""
    # TODO: –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã

    # –ü–æ–ª—É—á–∞–µ–º player_id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    from adapters.database.supabase.client import get_supabase_client
    client = await get_supabase_client()
    user_data = await client.execute_query(
        table="users",
        operation="select",
        columns=["player_id"],
        filters={"user_id": user_id},
        single=True
    )

    player_id = user_data.get("player_id", user_id) if user_data else user_id

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Å Base62
    referral_link = generate_referral_link(player_id, settings.BOT_USERNAME)

    return {
        "user_id": user_id,
        "referral_link": referral_link,
        "ref_rbtc": 0,
        "ref_ryabucks": 0,
        "ref_tickets": 0,
        "total_rbtc": 0,
        "total_ryabucks": 0,
        "total_tickets": 0,
        "friends_count": 0,
        "acquaintances_count": 0,
        "network_count": 0,
        "partner_pool": 4_200_000,
        "partner_rating": 0
    }


async def show_friends_menu(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –¥—Ä—É–∑–µ–π"""
    try:
        user_id = message.from_user.id

        friends_data = await get_friends_data(user_id)
        friends_text = FRIENDS_MENU.format(**friends_data)

        await message.answer(
            friends_text,
            reply_markup=get_friends_keyboard(),
            parse_mode=None,
            link_preview_options=LinkPreviewOptions(is_disabled=True),
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –º–µ–Ω—é –¥—Ä—É–∑–µ–π: {e}")
        await message.answer(ERROR_GENERAL)


# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –†–ê–ó–î–ï–õ–û–í –î–†–£–ó–ï–ô ===

@router.callback_query(F.data.startswith("friends_"))
async def handle_friends_section(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–æ–≤ –¥—Ä—É–∑–µ–π"""
    try:
        section = callback.data.split("_")[1]

        section_names = {
            "my": "üë• –ú–û–ò –î–†–£–ó–¨–Ø",
            "storage": "ü™ô –•–†–ê–ù–ò–õ–ò–©–ï",
            "shop": "üéü –ú–ê–ì–ê–ó–ò–ù"
        }

        section_name = section_names.get(section, "–ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –†–ê–ó–î–ï–õ")

        await callback.message.edit_text(
            f"{section_name}\n\n{SECTION_UNDER_DEVELOPMENT}",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text=BTN_BACK, callback_data="back_to_friends")]
            ])
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ –¥—Ä—É–∑–µ–π: {e}")
        await callback.answer("–û—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "back_to_friends")
async def back_to_friends(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –¥—Ä—É–∑–µ–π"""
    try:
        user_id = callback.from_user.id

        friends_data = await get_friends_data(user_id)
        friends_text = FRIENDS_MENU.format(**friends_data)

        await callback.message.edit_text(
            friends_text,
            reply_markup=get_friends_keyboard(),
            parse_mode=None,
            link_preview_options=LinkPreviewOptions(is_disabled=True)
        )

        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –¥—Ä—É–∑—å—è: {e}")
        await callback.answer("–û—à–∏–±–∫–∞", show_alert=True)
