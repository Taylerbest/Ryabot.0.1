# interfaces/telegram_bot/handlers/quantum_hub.py
"""
Quantum Hub Handler - –ö–≤–∞–Ω—Ç—Ö–∞–±
"""

import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from adapters.database.supabase.client import get_supabase_client
from config.texts import *

router = Router()
logger = logging.getLogger(__name__)


def get_quantum_hub_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –ö–≤–∞–Ω—Ç—Ö–∞–±–∞"""
    keyboard = [
        [
            InlineKeyboardButton(text="‚öõÔ∏è –õ–∞–±. –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ", callback_data="qhub_lab_equipment")
        ],
        [
            InlineKeyboardButton(text="ü™™ –ö–≤–∞–Ω—Ç–æ–≤—ã–π –ü—Ä–æ–ø—É—Å–∫", callback_data="quantum_pass")
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_town")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


@router.callback_query(F.data == "town_quantumhub")
async def show_quantum_hub_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ö–≤–∞–Ω—Ç—Ö–∞–±–∞"""
    try:
        user_id = callback.from_user.id

        # –ü–æ–ª—É—á–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        client = await get_supabase_client()
        user_data = await client.execute_query(
            table="users",
            operation="select",
            columns=["energy"],
            filters={"user_id": user_id},
            single=True
        )

        energy = user_data.get('energy', 0) if user_data else 0

        qhub_text = f"""„Ä∞Ô∏è„Ä∞Ô∏è üñ• –ö–í–ê–ù–¢–•–ê–ë ‚ÑπÔ∏è üîã{energy} „Ä∞Ô∏è„Ä∞Ô∏è

–≠—Ç–æ —Å–∏—è—é—â–∏–π —É–∑–µ–ª —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –≥–¥–µ –≥–µ–Ω–∏–∏ ¬´–†—è–±–æ—Ç–∞¬ª –ø—Ä–µ–ø–∞—Ä–∏—Ä—É—é—Ç —Å–∞–º –∫–æ—Å–º–æ—Å. –í –º–µ—Ä—Ü–∞—é—â–∏—Ö –ø–æ—Ä—Ç–∞–ª–∞—Ö –ø–∞—Ä—è—Ç –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ —Ç–≤–æ—Ä–µ–Ω–∏—è, –ø–æ–π–º–∞–Ω–Ω—ã–µ –≤ –ª–æ–≤—É—à–∫—É –≤–Ω–µ –ø–æ—Ç–æ–∫–∞ –≤—Ä–µ–º–µ–Ω–∏."""

        await callback.message.edit_text(
            qhub_text,
            reply_markup=get_quantum_hub_keyboard()
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –ö–≤–∞–Ω—Ç—Ö–∞–±–∞: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "qhub_lab_equipment")
async def show_lab_equipment(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"""
    try:
        equipment_text = f"""‚öõÔ∏è –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ

{SECTION_UNDER_DEVELOPMENT}

–ó–¥–µ—Å—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:
‚Ä¢ –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —É—Å–∫–æ—Ä–∏—Ç–µ–ª–∏
‚Ä¢ –•—Ä–æ–Ω–æ-—Å—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã
‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏
‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —è–∫–æ—Ä—è"""

        keyboard = [
            [
                InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="town_quantumhub")
            ]
        ]

        await callback.message.edit_text(
            equipment_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
        )
        await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


logger.info("Quantum Hub handlers loaded")
